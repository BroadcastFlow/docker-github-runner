name: Build GitHub Runner Docker Image

on:
  schedule:
    - cron: '30 9 * * 1-5'  # This will run the action at 9:30 am every day from Monday to Friday
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
          fetch-depth: 0

    - name: Check latest runner version
      run: |
        LATEST_VERSION=$(curl -s https://api.github.com/repos/actions/runner/releases/latest | jq -r .tag_name)
        echo "LATEST_VERSION=${LATEST_VERSION}" >> $GITHUB_ENV
        # Remove the 'v' from the version number
        LATEST_VERSION_CLEAN=${LATEST_VERSION#v}
        echo "LATEST_VERSION_CLEAN=${LATEST_VERSION_CLEAN}" >> $GITHUB_ENV

    - name: Get latest release version from repo
      run: |
        LATEST_TAG_HASH=$(git rev-list --tags --max-count=1 || echo "")
        if [ -z "$LATEST_TAG_HASH" ]; then
          LATEST_RELEASE="0.0.0"
        else
          LATEST_RELEASE=$(git describe --tags $LATEST_TAG_HASH)
        fi
        echo "LATEST_RELEASE=${LATEST_RELEASE}" >> $GITHUB_ENV


    - name: Compare versions
      run: |
        if [[ "${LATEST_VERSION}" == "${LATEST_RELEASE}" ]]; then
          echo "The latest version is already built. Skipping build."
          echo "BUILD=false" >> $GITHUB_ENV
        else
          echo "A new version is available. Proceeding with build."
          echo "BUILD=true" >> $GITHUB_ENV
        fi

    - name: Set up Docker Buildx
      if: env.BUILD == 'true'
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      if: env.BUILD == 'true'
      uses: docker/login-action@v2.2.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
           

    - name: Build and push Docker image
      if: env.BUILD == 'true'
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: ghcr.io/${{ github.repository_owner }}/github-runner:${{ env.LATEST_VERSION }}
        build-args: RUNNER_VERSION=${{ env.LATEST_VERSION_CLEAN }}

    - name: Create GitHub release
      if: env.BUILD == 'true'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.LATEST_VERSION }}
        release_name: GitHub Runner Docker Image ${{ env.LATEST_VERSION }}
        body: Docker image for GitHub Runner version ${{ env.LATEST_VERSION }}.
        draft: false
        prerelease: false